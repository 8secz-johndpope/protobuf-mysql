// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test.proto

#ifndef PROTOBUF_test_2eproto__INCLUDED
#define PROTOBUF_test_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "MysqlDescriptor.pb.h"
// @@protoc_insertion_point(includes)
namespace soul {
class table_field_message;
class table_field_messageDefaultTypeInternal;
extern table_field_messageDefaultTypeInternal _table_field_message_default_instance_;
class table_test;
class table_testDefaultTypeInternal;
extern table_testDefaultTypeInternal _table_test_default_instance_;
class table_test_repeated;
class table_test_repeatedDefaultTypeInternal;
extern table_test_repeatedDefaultTypeInternal _table_test_repeated_default_instance_;
}  // namespace soul

namespace soul {

namespace protobuf_test_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_test_2eproto

// ===================================================================

class table_field_message : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:soul.table_field_message) */ {
 public:
  table_field_message();
  virtual ~table_field_message();

  table_field_message(const table_field_message& from);

  inline table_field_message& operator=(const table_field_message& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const table_field_message& default_instance();

  static inline const table_field_message* internal_default_instance() {
    return reinterpret_cast<const table_field_message*>(
               &_table_field_message_default_instance_);
  }

  void Swap(table_field_message* other);

  // implements Message ----------------------------------------------

  inline table_field_message* New() const PROTOBUF_FINAL { return New(NULL); }

  table_field_message* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const table_field_message& from);
  void MergeFrom(const table_field_message& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(table_field_message* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string fieldstring = 3;
  bool has_fieldstring() const;
  void clear_fieldstring();
  static const int kFieldstringFieldNumber = 3;
  const ::std::string& fieldstring() const;
  void set_fieldstring(const ::std::string& value);
  #if LANG_CXX11
  void set_fieldstring(::std::string&& value);
  #endif
  void set_fieldstring(const char* value);
  void set_fieldstring(const char* value, size_t size);
  ::std::string* mutable_fieldstring();
  ::std::string* release_fieldstring();
  void set_allocated_fieldstring(::std::string* fieldstring);

  // optional int32 filedint = 1;
  bool has_filedint() const;
  void clear_filedint();
  static const int kFiledintFieldNumber = 1;
  ::google::protobuf::int32 filedint() const;
  void set_filedint(::google::protobuf::int32 value);

  // optional uint32 fielduint = 2;
  bool has_fielduint() const;
  void clear_fielduint();
  static const int kFielduintFieldNumber = 2;
  ::google::protobuf::uint32 fielduint() const;
  void set_fielduint(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:soul.table_field_message)
 private:
  void set_has_filedint();
  void clear_has_filedint();
  void set_has_fielduint();
  void clear_has_fielduint();
  void set_has_fieldstring();
  void clear_has_fieldstring();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr fieldstring_;
  ::google::protobuf::int32 filedint_;
  ::google::protobuf::uint32 fielduint_;
  friend struct protobuf_test_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class table_test : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:soul.table_test) */ {
 public:
  table_test();
  virtual ~table_test();

  table_test(const table_test& from);

  inline table_test& operator=(const table_test& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const table_test& default_instance();

  static inline const table_test* internal_default_instance() {
    return reinterpret_cast<const table_test*>(
               &_table_test_default_instance_);
  }

  void Swap(table_test* other);

  // implements Message ----------------------------------------------

  inline table_test* New() const PROTOBUF_FINAL { return New(NULL); }

  table_test* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const table_test& from);
  void MergeFrom(const table_test& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(table_test* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .soul.table_field_message field3 = 4;
  bool has_field3() const;
  void clear_field3();
  static const int kField3FieldNumber = 4;
  const ::soul::table_field_message& field3() const;
  ::soul::table_field_message* mutable_field3();
  ::soul::table_field_message* release_field3();
  void set_allocated_field3(::soul::table_field_message* field3);

  // optional uint32 keyid = 1 [(.soul.primarykey) = true];
  bool has_keyid() const;
  void clear_keyid();
  static const int kKeyidFieldNumber = 1;
  ::google::protobuf::uint32 keyid() const;
  void set_keyid(::google::protobuf::uint32 value);

  // optional uint32 field1 = 2 [(.soul.updatekey) = true];
  bool has_field1() const;
  void clear_field1();
  static const int kField1FieldNumber = 2;
  ::google::protobuf::uint32 field1() const;
  void set_field1(::google::protobuf::uint32 value);

  // optional uint32 field2 = 3;
  bool has_field2() const;
  void clear_field2();
  static const int kField2FieldNumber = 3;
  ::google::protobuf::uint32 field2() const;
  void set_field2(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:soul.table_test)
 private:
  void set_has_keyid();
  void clear_has_keyid();
  void set_has_field1();
  void clear_has_field1();
  void set_has_field2();
  void clear_has_field2();
  void set_has_field3();
  void clear_has_field3();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::soul::table_field_message* field3_;
  ::google::protobuf::uint32 keyid_;
  ::google::protobuf::uint32 field1_;
  ::google::protobuf::uint32 field2_;
  friend struct protobuf_test_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class table_test_repeated : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:soul.table_test_repeated) */ {
 public:
  table_test_repeated();
  virtual ~table_test_repeated();

  table_test_repeated(const table_test_repeated& from);

  inline table_test_repeated& operator=(const table_test_repeated& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const table_test_repeated& default_instance();

  static inline const table_test_repeated* internal_default_instance() {
    return reinterpret_cast<const table_test_repeated*>(
               &_table_test_repeated_default_instance_);
  }

  void Swap(table_test_repeated* other);

  // implements Message ----------------------------------------------

  inline table_test_repeated* New() const PROTOBUF_FINAL { return New(NULL); }

  table_test_repeated* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const table_test_repeated& from);
  void MergeFrom(const table_test_repeated& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(table_test_repeated* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .soul.table_test fields = 1;
  int fields_size() const;
  void clear_fields();
  static const int kFieldsFieldNumber = 1;
  const ::soul::table_test& fields(int index) const;
  ::soul::table_test* mutable_fields(int index);
  ::soul::table_test* add_fields();
  ::google::protobuf::RepeatedPtrField< ::soul::table_test >*
      mutable_fields();
  const ::google::protobuf::RepeatedPtrField< ::soul::table_test >&
      fields() const;

  // @@protoc_insertion_point(class_scope:soul.table_test_repeated)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::soul::table_test > fields_;
  friend struct protobuf_test_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// table_field_message

// optional int32 filedint = 1;
inline bool table_field_message::has_filedint() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void table_field_message::set_has_filedint() {
  _has_bits_[0] |= 0x00000002u;
}
inline void table_field_message::clear_has_filedint() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void table_field_message::clear_filedint() {
  filedint_ = 0;
  clear_has_filedint();
}
inline ::google::protobuf::int32 table_field_message::filedint() const {
  // @@protoc_insertion_point(field_get:soul.table_field_message.filedint)
  return filedint_;
}
inline void table_field_message::set_filedint(::google::protobuf::int32 value) {
  set_has_filedint();
  filedint_ = value;
  // @@protoc_insertion_point(field_set:soul.table_field_message.filedint)
}

// optional uint32 fielduint = 2;
inline bool table_field_message::has_fielduint() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void table_field_message::set_has_fielduint() {
  _has_bits_[0] |= 0x00000004u;
}
inline void table_field_message::clear_has_fielduint() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void table_field_message::clear_fielduint() {
  fielduint_ = 0u;
  clear_has_fielduint();
}
inline ::google::protobuf::uint32 table_field_message::fielduint() const {
  // @@protoc_insertion_point(field_get:soul.table_field_message.fielduint)
  return fielduint_;
}
inline void table_field_message::set_fielduint(::google::protobuf::uint32 value) {
  set_has_fielduint();
  fielduint_ = value;
  // @@protoc_insertion_point(field_set:soul.table_field_message.fielduint)
}

// optional string fieldstring = 3;
inline bool table_field_message::has_fieldstring() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void table_field_message::set_has_fieldstring() {
  _has_bits_[0] |= 0x00000001u;
}
inline void table_field_message::clear_has_fieldstring() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void table_field_message::clear_fieldstring() {
  fieldstring_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_fieldstring();
}
inline const ::std::string& table_field_message::fieldstring() const {
  // @@protoc_insertion_point(field_get:soul.table_field_message.fieldstring)
  return fieldstring_.GetNoArena();
}
inline void table_field_message::set_fieldstring(const ::std::string& value) {
  set_has_fieldstring();
  fieldstring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:soul.table_field_message.fieldstring)
}
#if LANG_CXX11
inline void table_field_message::set_fieldstring(::std::string&& value) {
  set_has_fieldstring();
  fieldstring_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:soul.table_field_message.fieldstring)
}
#endif
inline void table_field_message::set_fieldstring(const char* value) {
  set_has_fieldstring();
  fieldstring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:soul.table_field_message.fieldstring)
}
inline void table_field_message::set_fieldstring(const char* value, size_t size) {
  set_has_fieldstring();
  fieldstring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:soul.table_field_message.fieldstring)
}
inline ::std::string* table_field_message::mutable_fieldstring() {
  set_has_fieldstring();
  // @@protoc_insertion_point(field_mutable:soul.table_field_message.fieldstring)
  return fieldstring_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* table_field_message::release_fieldstring() {
  // @@protoc_insertion_point(field_release:soul.table_field_message.fieldstring)
  clear_has_fieldstring();
  return fieldstring_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void table_field_message::set_allocated_fieldstring(::std::string* fieldstring) {
  if (fieldstring != NULL) {
    set_has_fieldstring();
  } else {
    clear_has_fieldstring();
  }
  fieldstring_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fieldstring);
  // @@protoc_insertion_point(field_set_allocated:soul.table_field_message.fieldstring)
}

// -------------------------------------------------------------------

// table_test

// optional uint32 keyid = 1 [(.soul.primarykey) = true];
inline bool table_test::has_keyid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void table_test::set_has_keyid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void table_test::clear_has_keyid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void table_test::clear_keyid() {
  keyid_ = 0u;
  clear_has_keyid();
}
inline ::google::protobuf::uint32 table_test::keyid() const {
  // @@protoc_insertion_point(field_get:soul.table_test.keyid)
  return keyid_;
}
inline void table_test::set_keyid(::google::protobuf::uint32 value) {
  set_has_keyid();
  keyid_ = value;
  // @@protoc_insertion_point(field_set:soul.table_test.keyid)
}

// optional uint32 field1 = 2 [(.soul.updatekey) = true];
inline bool table_test::has_field1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void table_test::set_has_field1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void table_test::clear_has_field1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void table_test::clear_field1() {
  field1_ = 0u;
  clear_has_field1();
}
inline ::google::protobuf::uint32 table_test::field1() const {
  // @@protoc_insertion_point(field_get:soul.table_test.field1)
  return field1_;
}
inline void table_test::set_field1(::google::protobuf::uint32 value) {
  set_has_field1();
  field1_ = value;
  // @@protoc_insertion_point(field_set:soul.table_test.field1)
}

// optional uint32 field2 = 3;
inline bool table_test::has_field2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void table_test::set_has_field2() {
  _has_bits_[0] |= 0x00000008u;
}
inline void table_test::clear_has_field2() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void table_test::clear_field2() {
  field2_ = 0u;
  clear_has_field2();
}
inline ::google::protobuf::uint32 table_test::field2() const {
  // @@protoc_insertion_point(field_get:soul.table_test.field2)
  return field2_;
}
inline void table_test::set_field2(::google::protobuf::uint32 value) {
  set_has_field2();
  field2_ = value;
  // @@protoc_insertion_point(field_set:soul.table_test.field2)
}

// optional .soul.table_field_message field3 = 4;
inline bool table_test::has_field3() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void table_test::set_has_field3() {
  _has_bits_[0] |= 0x00000001u;
}
inline void table_test::clear_has_field3() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void table_test::clear_field3() {
  if (field3_ != NULL) field3_->::soul::table_field_message::Clear();
  clear_has_field3();
}
inline const ::soul::table_field_message& table_test::field3() const {
  // @@protoc_insertion_point(field_get:soul.table_test.field3)
  return field3_ != NULL ? *field3_
                         : *::soul::table_field_message::internal_default_instance();
}
inline ::soul::table_field_message* table_test::mutable_field3() {
  set_has_field3();
  if (field3_ == NULL) {
    field3_ = new ::soul::table_field_message;
  }
  // @@protoc_insertion_point(field_mutable:soul.table_test.field3)
  return field3_;
}
inline ::soul::table_field_message* table_test::release_field3() {
  // @@protoc_insertion_point(field_release:soul.table_test.field3)
  clear_has_field3();
  ::soul::table_field_message* temp = field3_;
  field3_ = NULL;
  return temp;
}
inline void table_test::set_allocated_field3(::soul::table_field_message* field3) {
  delete field3_;
  field3_ = field3;
  if (field3) {
    set_has_field3();
  } else {
    clear_has_field3();
  }
  // @@protoc_insertion_point(field_set_allocated:soul.table_test.field3)
}

// -------------------------------------------------------------------

// table_test_repeated

// repeated .soul.table_test fields = 1;
inline int table_test_repeated::fields_size() const {
  return fields_.size();
}
inline void table_test_repeated::clear_fields() {
  fields_.Clear();
}
inline const ::soul::table_test& table_test_repeated::fields(int index) const {
  // @@protoc_insertion_point(field_get:soul.table_test_repeated.fields)
  return fields_.Get(index);
}
inline ::soul::table_test* table_test_repeated::mutable_fields(int index) {
  // @@protoc_insertion_point(field_mutable:soul.table_test_repeated.fields)
  return fields_.Mutable(index);
}
inline ::soul::table_test* table_test_repeated::add_fields() {
  // @@protoc_insertion_point(field_add:soul.table_test_repeated.fields)
  return fields_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::soul::table_test >*
table_test_repeated::mutable_fields() {
  // @@protoc_insertion_point(field_mutable_list:soul.table_test_repeated.fields)
  return &fields_;
}
inline const ::google::protobuf::RepeatedPtrField< ::soul::table_test >&
table_test_repeated::fields() const {
  // @@protoc_insertion_point(field_list:soul.table_test_repeated.fields)
  return fields_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace soul

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_test_2eproto__INCLUDED
